@model List<DehaAccountingMvc.Models.Accounting.BatchStocktakingViewModel>

@{
    ViewData["Title"] = "Kiểm kê hàng loạt";
}

<div class="card shadow-sm">
    <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
        <h4 class="m-0 font-weight-bold text-primary">Kiểm kê hàng loạt</h4>
        <div>
            <a asp-action="StockReport" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-1"></i> Quay lại báo cáo
            </a>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i> Nhập số lượng thực tế cho từng sản phẩm theo kết quả kiểm kê. Hệ thống sẽ tự động cập nhật số lượng tồn kho và tạo phiếu kiểm kê.
        </div>

        <form asp-action="BatchStocktaking" method="post">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Mã SP</th>
                            <th>Tên sản phẩm</th>
                            <th>Danh mục</th>
                            <th class="text-end">Số lượng hiện tại</th>
                            <th class="text-end">Số lượng thực tế</th>
                            <th class="text-end">Chênh lệch</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Count; i++)
                        {
                                <tr>
                                    <input type="hidden" asp-for="@Model[i].ProductId" />
                                    <input type="hidden" asp-for="@Model[i].ProductCode" />
                                    <input type="hidden" asp-for="@Model[i].ProductName" />
                                    <input type="hidden" asp-for="@Model[i].CategoryName" />
                                    <input type="hidden" asp-for="@Model[i].CurrentQuantity" />
                                    <td>@Model[i].ProductCode</td>
                                    <td>@Model[i].ProductName</td>
                                    <td>@Model[i].CategoryName</td>
                                    <td class="text-end">@Model[i].CurrentQuantity</td>
                                    <td>
                                        <input asp-for="@Model[i].NewQuantity" class="form-control text-end new-quantity" />
                                        <span asp-validation-for="@Model[i].NewQuantity" class="text-danger"></span>
                                    </td>
                                    <td class="text-end difference">
                                        <span class="difference-value">@(Model[i].NewQuantity - Model[i].CurrentQuantity)</span>
                                    </td>
                                </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save me-1"></i> Lưu kiểm kê
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
        <script>
            $(document).ready(function () {
                // Cập nhật chênh lệch khi nhập số lượng mới
                $('.new-quantity').on('input', function () {
                    var row = $(this).closest('tr');
                    var currentQuantity = parseFloat(row.find('td:eq(3)').text());
                    var newQuantity = parseFloat($(this).val()) || 0;
                    var difference = newQuantity - currentQuantity;
                
                    var differenceCell = row.find('.difference');
                    var differenceValue = row.find('.difference-value');
                
                    differenceValue.text(difference);
                
                    if (difference > 0) {
                        differenceCell.removeClass('text-danger').addClass('text-success');
                        differenceValue.text('+' + difference);
                    } else if (difference < 0) {
                        differenceCell.removeClass('text-success').addClass('text-danger');
                        differenceValue.text(difference);
                    } else {
                        differenceCell.removeClass('text-success text-danger');
                        differenceValue.text('0');
                    }
                });
            });
        </script>
}